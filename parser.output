Grammar

    0 $accept: program $end

    1 program: functionDefinition
    2        | program functionDefinition

    3 literal: STRING
    4        | CONSTANT

    5 inputStatement: INPUT_K OPEN_BRACKET IDENTIFIER CLOSE_BRACKET

    6 outputStatement: OUTPUT_K OPEN_BRACKET IDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K OPEN_BRACKET literal CLOSE_BRACKET

    8 expression: prec12

    9 prec0: prec0 UN_OP
   10      | term

   11 prec1: UN_OP prec1
   12      | BIN_OP_ADD prec1
   13      | BIN_OP_BAND prec1
   14      | OP_MUL prec1
   15      | prec0

   16 prec2: prec2 BIN_OP_MUL prec1
   17      | prec2 OP_MUL prec1
   18      | prec1

   19 prec3: prec3 BIN_OP_ADD prec2
   20      | prec2

   21 prec4: prec4 BIN_OP_SHIFT prec3
   22      | prec3

   23 prec5: prec5 BIN_OP_REL prec4
   24      | prec4

   25 prec6: prec6 BIN_OP_EQ prec5
   26      | prec5

   27 prec7: prec7 BIN_OP_BAND prec6
   28      | prec6

   29 prec8: prec8 BIN_OP_BXOR prec7
   30      | prec7

   31 prec9: prec9 BIN_OP_BOR prec8
   32      | prec8

   33 prec10: prec10 BIN_OP_LAND prec9
   34       | prec9

   35 prec11: prec11 BIN_OP_LOR prec10
   36       | prec10

   37 prec12: prec11 BIN_OP_ASSIGN prec12
   38       | prec11

   39 term: IDENTIFIER
   40     | literal
   41     | functionCall
   42     | term OPEN_SQUARE expression CLOSE_SQUARE
   43     | OPEN_BRACKET expression CLOSE_BRACKET

   44 commaSeparatedExpressions: expression
   45                          | commaSeparatedExpressions COMMA expression

   46 functionCall: IDENTIFIER OPEN_BRACKET CLOSE_BRACKET
   47             | IDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET

   48 identifier: functionIdentifier
   49           | identifier OPEN_SQUARE expression CLOSE_SQUARE

   50 declaration: DATATYPE identifier

   51 commaSeparatedDeclarations: declaration
   52                           | commaSeparatedDeclarations COMMA declaration

   53 statement: SEMICOLON
   54          | RETURN_K expression SEMICOLON
   55          | BREAK_K SEMICOLON
   56          | CONTINUE_K SEMICOLON
   57          | ifElseStatement
   58          | forStatement
   59          | whileStatement
   60          | inputStatement SEMICOLON
   61          | outputStatement SEMICOLON
   62          | expression SEMICOLON
   63          | commaSeparatedDeclarations SEMICOLON

   64 statements: statement
   65           | statements statement

   66 block: OPEN_CURLY statements CLOSE_CURLY

   67 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

   69 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block

   70 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET block

   71 ifElseStatement: ifStatement
   72                | ifStatement elseStatement

   73 functionIdentifier: IDENTIFIER
   74                   | OP_MUL functionIdentifier

   75 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   76                   | DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET block


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 3
CONSTANT (259) 4
DATATYPE (260) 50 75 76
IF_K (261) 69
ELSE_K (262) 70
WHILE_K (263) 67
FOR_K (264) 68
RETURN_K (265) 54
BREAK_K (266) 55
CONTINUE_K (267) 56
INPUT_K (268) 5
OUTPUT_K (269) 6 7
SEMICOLON (270) 53 54 55 56 60 61 62 63 68
COMMA (271) 45 52
OP_MUL (272) 14 17 74
BIN_OP_MUL (273) 16
BIN_OP_ADD (274) 12 19
BIN_OP_SHIFT (275) 21
BIN_OP_REL (276) 23
BIN_OP_EQ (277) 25
BIN_OP_ASSIGN (278) 37
BIN_OP_BAND (279) 13 27
BIN_OP_BOR (280) 31
BIN_OP_BXOR (281) 29
BIN_OP_LAND (282) 33
BIN_OP_LOR (283) 35
UN_OP (284) 9 11
OPEN_BRACKET (285) 5 6 7 43 46 47 67 68 69 70 75 76
CLOSE_BRACKET (286) 5 6 7 43 46 47 67 68 69 70 75 76
OPEN_SQUARE (287) 42 49
CLOSE_SQUARE (288) 42 49
OPEN_CURLY (289) 66
CLOSE_CURLY (290) 66
IDENTIFIER (291) 5 6 39 46 47 73


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1 2, on right: 0 2
literal (39)
    on left: 3 4, on right: 7 40
inputStatement (40)
    on left: 5, on right: 60
outputStatement (41)
    on left: 6 7, on right: 61
expression (42)
    on left: 8, on right: 42 43 44 45 49 54 62 67 68 69 70
prec0 (43)
    on left: 9 10, on right: 9 15
prec1 (44)
    on left: 11 12 13 14 15, on right: 11 12 13 14 16 17 18
prec2 (45)
    on left: 16 17 18, on right: 16 17 19 20
prec3 (46)
    on left: 19 20, on right: 19 21 22
prec4 (47)
    on left: 21 22, on right: 21 23 24
prec5 (48)
    on left: 23 24, on right: 23 25 26
prec6 (49)
    on left: 25 26, on right: 25 27 28
prec7 (50)
    on left: 27 28, on right: 27 29 30
prec8 (51)
    on left: 29 30, on right: 29 31 32
prec9 (52)
    on left: 31 32, on right: 31 33 34
prec10 (53)
    on left: 33 34, on right: 33 35 36
prec11 (54)
    on left: 35 36, on right: 35 37 38
prec12 (55)
    on left: 37 38, on right: 8 37
term (56)
    on left: 39 40 41 42 43, on right: 10 42
commaSeparatedExpressions (57)
    on left: 44 45, on right: 45 47
functionCall (58)
    on left: 46 47, on right: 41
identifier (59)
    on left: 48 49, on right: 49 50
declaration (60)
    on left: 50, on right: 51 52
commaSeparatedDeclarations (61)
    on left: 51 52, on right: 52 63 75
statement (62)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 64 65
statements (63)
    on left: 64 65, on right: 65 66
block (64)
    on left: 66, on right: 67 68 69 70 75 76
whileStatement (65)
    on left: 67, on right: 59
forStatement (66)
    on left: 68, on right: 58
ifStatement (67)
    on left: 69, on right: 71 72
elseStatement (68)
    on left: 70, on right: 72
ifElseStatement (69)
    on left: 71 72, on right: 57
functionIdentifier (70)
    on left: 73 74, on right: 48 74 75 76
functionDefinition (71)
    on left: 75 76, on right: 1 2


State 0

    0 $accept: . program $end

    DATATYPE  shift, and go to state 1

    program             go to state 2
    functionDefinition  go to state 3


State 1

   75 functionDefinition: DATATYPE . functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   76                   | DATATYPE . functionIdentifier OPEN_BRACKET CLOSE_BRACKET block

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    functionIdentifier  go to state 6


State 2

    0 $accept: program . $end
    2 program: program . functionDefinition

    $end      shift, and go to state 7
    DATATYPE  shift, and go to state 1

    functionDefinition  go to state 8


State 3

    1 program: functionDefinition .

    $default  reduce using rule 1 (program)


State 4

   74 functionIdentifier: OP_MUL . functionIdentifier

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    functionIdentifier  go to state 9


State 5

   73 functionIdentifier: IDENTIFIER .

    $default  reduce using rule 73 (functionIdentifier)


State 6

   75 functionDefinition: DATATYPE functionIdentifier . OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   76                   | DATATYPE functionIdentifier . OPEN_BRACKET CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 program: program functionDefinition .

    $default  reduce using rule 2 (program)


State 9

   74 functionIdentifier: OP_MUL functionIdentifier .

    $default  reduce using rule 74 (functionIdentifier)


State 10

   75 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET . commaSeparatedDeclarations CLOSE_BRACKET block
   76                   | DATATYPE functionIdentifier OPEN_BRACKET . CLOSE_BRACKET block

    DATATYPE       shift, and go to state 11
    CLOSE_BRACKET  shift, and go to state 12

    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 14


State 11

   50 declaration: DATATYPE . identifier

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    identifier          go to state 15
    functionIdentifier  go to state 16


State 12

   76 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 18


State 13

   51 commaSeparatedDeclarations: declaration .

    $default  reduce using rule 51 (commaSeparatedDeclarations)


State 14

   52 commaSeparatedDeclarations: commaSeparatedDeclarations . COMMA declaration
   75 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations . CLOSE_BRACKET block

    COMMA          shift, and go to state 19
    CLOSE_BRACKET  shift, and go to state 20


State 15

   49 identifier: identifier . OPEN_SQUARE expression CLOSE_SQUARE
   50 declaration: DATATYPE identifier .

    OPEN_SQUARE  shift, and go to state 21

    $default  reduce using rule 50 (declaration)


State 16

   48 identifier: functionIdentifier .

    $default  reduce using rule 48 (identifier)


State 17

   66 block: OPEN_CURLY . statements CLOSE_CURLY

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    DATATYPE      shift, and go to state 11
    IF_K          shift, and go to state 24
    WHILE_K       shift, and go to state 25
    FOR_K         shift, and go to state 26
    RETURN_K      shift, and go to state 27
    BREAK_K       shift, and go to state 28
    CONTINUE_K    shift, and go to state 29
    INPUT_K       shift, and go to state 30
    OUTPUT_K      shift, and go to state 31
    SEMICOLON     shift, and go to state 32
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal                     go to state 39
    inputStatement              go to state 40
    outputStatement             go to state 41
    expression                  go to state 42
    prec0                       go to state 43
    prec1                       go to state 44
    prec2                       go to state 45
    prec3                       go to state 46
    prec4                       go to state 47
    prec5                       go to state 48
    prec6                       go to state 49
    prec7                       go to state 50
    prec8                       go to state 51
    prec9                       go to state 52
    prec10                      go to state 53
    prec11                      go to state 54
    prec12                      go to state 55
    term                        go to state 56
    functionCall                go to state 57
    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 58
    statement                   go to state 59
    statements                  go to state 60
    whileStatement              go to state 61
    forStatement                go to state 62
    ifStatement                 go to state 63
    ifElseStatement             go to state 64


State 18

   76 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET block .

    $default  reduce using rule 76 (functionDefinition)


State 19

   52 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA . declaration

    DATATYPE  shift, and go to state 11

    declaration  go to state 65


State 20

   75 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 66


State 21

   49 identifier: identifier OPEN_SQUARE . expression CLOSE_SQUARE

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 67
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 22

    3 literal: STRING .

    $default  reduce using rule 3 (literal)


State 23

    4 literal: CONSTANT .

    $default  reduce using rule 4 (literal)


State 24

   69 ifStatement: IF_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 68


State 25

   67 whileStatement: WHILE_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 69


State 26

   68 forStatement: FOR_K . OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 70


State 27

   54 statement: RETURN_K . expression SEMICOLON

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 71
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 28

   55 statement: BREAK_K . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 29

   56 statement: CONTINUE_K . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 30

    5 inputStatement: INPUT_K . OPEN_BRACKET IDENTIFIER CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 74


State 31

    6 outputStatement: OUTPUT_K . OPEN_BRACKET IDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K . OPEN_BRACKET literal CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 75


State 32

   53 statement: SEMICOLON .

    $default  reduce using rule 53 (statement)


State 33

   14 prec1: OP_MUL . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 76
    term          go to state 56
    functionCall  go to state 57


State 34

   12 prec1: BIN_OP_ADD . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 77
    term          go to state 56
    functionCall  go to state 57


State 35

   13 prec1: BIN_OP_BAND . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 78
    term          go to state 56
    functionCall  go to state 57


State 36

   11 prec1: UN_OP . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 79
    term          go to state 56
    functionCall  go to state 57


State 37

   43 term: OPEN_BRACKET . expression CLOSE_BRACKET

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 80
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 38

   39 term: IDENTIFIER .
   46 functionCall: IDENTIFIER . OPEN_BRACKET CLOSE_BRACKET
   47             | IDENTIFIER . OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 81

    $default  reduce using rule 39 (term)


State 39

   40 term: literal .

    $default  reduce using rule 40 (term)


State 40

   60 statement: inputStatement . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 41

   61 statement: outputStatement . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 42

   62 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 43

    9 prec0: prec0 . UN_OP
   15 prec1: prec0 .

    UN_OP  shift, and go to state 85

    $default  reduce using rule 15 (prec1)


State 44

   18 prec2: prec1 .

    $default  reduce using rule 18 (prec2)


State 45

   16 prec2: prec2 . BIN_OP_MUL prec1
   17      | prec2 . OP_MUL prec1
   20 prec3: prec2 .

    OP_MUL      shift, and go to state 86
    BIN_OP_MUL  shift, and go to state 87

    $default  reduce using rule 20 (prec3)


State 46

   19 prec3: prec3 . BIN_OP_ADD prec2
   22 prec4: prec3 .

    BIN_OP_ADD  shift, and go to state 88

    $default  reduce using rule 22 (prec4)


State 47

   21 prec4: prec4 . BIN_OP_SHIFT prec3
   24 prec5: prec4 .

    BIN_OP_SHIFT  shift, and go to state 89

    $default  reduce using rule 24 (prec5)


State 48

   23 prec5: prec5 . BIN_OP_REL prec4
   26 prec6: prec5 .

    BIN_OP_REL  shift, and go to state 90

    $default  reduce using rule 26 (prec6)


State 49

   25 prec6: prec6 . BIN_OP_EQ prec5
   28 prec7: prec6 .

    BIN_OP_EQ  shift, and go to state 91

    $default  reduce using rule 28 (prec7)


State 50

   27 prec7: prec7 . BIN_OP_BAND prec6
   30 prec8: prec7 .

    BIN_OP_BAND  shift, and go to state 92

    $default  reduce using rule 30 (prec8)


State 51

   29 prec8: prec8 . BIN_OP_BXOR prec7
   32 prec9: prec8 .

    BIN_OP_BXOR  shift, and go to state 93

    $default  reduce using rule 32 (prec9)


State 52

   31 prec9: prec9 . BIN_OP_BOR prec8
   34 prec10: prec9 .

    BIN_OP_BOR  shift, and go to state 94

    $default  reduce using rule 34 (prec10)


State 53

   33 prec10: prec10 . BIN_OP_LAND prec9
   36 prec11: prec10 .

    BIN_OP_LAND  shift, and go to state 95

    $default  reduce using rule 36 (prec11)


State 54

   35 prec11: prec11 . BIN_OP_LOR prec10
   37 prec12: prec11 . BIN_OP_ASSIGN prec12
   38       | prec11 .

    BIN_OP_ASSIGN  shift, and go to state 96
    BIN_OP_LOR     shift, and go to state 97

    $default  reduce using rule 38 (prec12)


State 55

    8 expression: prec12 .

    $default  reduce using rule 8 (expression)


State 56

   10 prec0: term .
   42 term: term . OPEN_SQUARE expression CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 98

    $default  reduce using rule 10 (prec0)


State 57

   41 term: functionCall .

    $default  reduce using rule 41 (term)


State 58

   52 commaSeparatedDeclarations: commaSeparatedDeclarations . COMMA declaration
   63 statement: commaSeparatedDeclarations . SEMICOLON

    SEMICOLON  shift, and go to state 99
    COMMA      shift, and go to state 19


State 59

   64 statements: statement .

    $default  reduce using rule 64 (statements)


State 60

   65 statements: statements . statement
   66 block: OPEN_CURLY statements . CLOSE_CURLY

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    DATATYPE      shift, and go to state 11
    IF_K          shift, and go to state 24
    WHILE_K       shift, and go to state 25
    FOR_K         shift, and go to state 26
    RETURN_K      shift, and go to state 27
    BREAK_K       shift, and go to state 28
    CONTINUE_K    shift, and go to state 29
    INPUT_K       shift, and go to state 30
    OUTPUT_K      shift, and go to state 31
    SEMICOLON     shift, and go to state 32
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    CLOSE_CURLY   shift, and go to state 100
    IDENTIFIER    shift, and go to state 38

    literal                     go to state 39
    inputStatement              go to state 40
    outputStatement             go to state 41
    expression                  go to state 42
    prec0                       go to state 43
    prec1                       go to state 44
    prec2                       go to state 45
    prec3                       go to state 46
    prec4                       go to state 47
    prec5                       go to state 48
    prec6                       go to state 49
    prec7                       go to state 50
    prec8                       go to state 51
    prec9                       go to state 52
    prec10                      go to state 53
    prec11                      go to state 54
    prec12                      go to state 55
    term                        go to state 56
    functionCall                go to state 57
    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 58
    statement                   go to state 101
    whileStatement              go to state 61
    forStatement                go to state 62
    ifStatement                 go to state 63
    ifElseStatement             go to state 64


State 61

   59 statement: whileStatement .

    $default  reduce using rule 59 (statement)


State 62

   58 statement: forStatement .

    $default  reduce using rule 58 (statement)


State 63

   71 ifElseStatement: ifStatement .
   72                | ifStatement . elseStatement

    ELSE_K  shift, and go to state 102

    $default  reduce using rule 71 (ifElseStatement)

    elseStatement  go to state 103


State 64

   57 statement: ifElseStatement .

    $default  reduce using rule 57 (statement)


State 65

   52 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA declaration .

    $default  reduce using rule 52 (commaSeparatedDeclarations)


State 66

   75 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block .

    $default  reduce using rule 75 (functionDefinition)


State 67

   49 identifier: identifier OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 104


State 68

   69 ifStatement: IF_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 105
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 69

   67 whileStatement: WHILE_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 106
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 70

   68 forStatement: FOR_K OPEN_BRACKET . expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 107
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 71

   54 statement: RETURN_K expression . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 72

   55 statement: BREAK_K SEMICOLON .

    $default  reduce using rule 55 (statement)


State 73

   56 statement: CONTINUE_K SEMICOLON .

    $default  reduce using rule 56 (statement)


State 74

    5 inputStatement: INPUT_K OPEN_BRACKET . IDENTIFIER CLOSE_BRACKET

    IDENTIFIER  shift, and go to state 109


State 75

    6 outputStatement: OUTPUT_K OPEN_BRACKET . IDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K OPEN_BRACKET . literal CLOSE_BRACKET

    STRING      shift, and go to state 22
    CONSTANT    shift, and go to state 23
    IDENTIFIER  shift, and go to state 110

    literal  go to state 111


State 76

   14 prec1: OP_MUL prec1 .

    $default  reduce using rule 14 (prec1)


State 77

   12 prec1: BIN_OP_ADD prec1 .

    $default  reduce using rule 12 (prec1)


State 78

   13 prec1: BIN_OP_BAND prec1 .

    $default  reduce using rule 13 (prec1)


State 79

   11 prec1: UN_OP prec1 .

    $default  reduce using rule 11 (prec1)


State 80

   43 term: OPEN_BRACKET expression . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 112


State 81

   46 functionCall: IDENTIFIER OPEN_BRACKET . CLOSE_BRACKET
   47             | IDENTIFIER OPEN_BRACKET . commaSeparatedExpressions CLOSE_BRACKET

    STRING         shift, and go to state 22
    CONSTANT       shift, and go to state 23
    OP_MUL         shift, and go to state 33
    BIN_OP_ADD     shift, and go to state 34
    BIN_OP_BAND    shift, and go to state 35
    UN_OP          shift, and go to state 36
    OPEN_BRACKET   shift, and go to state 37
    CLOSE_BRACKET  shift, and go to state 113
    IDENTIFIER     shift, and go to state 38

    literal                    go to state 39
    expression                 go to state 114
    prec0                      go to state 43
    prec1                      go to state 44
    prec2                      go to state 45
    prec3                      go to state 46
    prec4                      go to state 47
    prec5                      go to state 48
    prec6                      go to state 49
    prec7                      go to state 50
    prec8                      go to state 51
    prec9                      go to state 52
    prec10                     go to state 53
    prec11                     go to state 54
    prec12                     go to state 55
    term                       go to state 56
    commaSeparatedExpressions  go to state 115
    functionCall               go to state 57


State 82

   60 statement: inputStatement SEMICOLON .

    $default  reduce using rule 60 (statement)


State 83

   61 statement: outputStatement SEMICOLON .

    $default  reduce using rule 61 (statement)


State 84

   62 statement: expression SEMICOLON .

    $default  reduce using rule 62 (statement)


State 85

    9 prec0: prec0 UN_OP .

    $default  reduce using rule 9 (prec0)


State 86

   17 prec2: prec2 OP_MUL . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 116
    term          go to state 56
    functionCall  go to state 57


State 87

   16 prec2: prec2 BIN_OP_MUL . prec1

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 117
    term          go to state 56
    functionCall  go to state 57


State 88

   19 prec3: prec3 BIN_OP_ADD . prec2

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 118
    term          go to state 56
    functionCall  go to state 57


State 89

   21 prec4: prec4 BIN_OP_SHIFT . prec3

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 119
    term          go to state 56
    functionCall  go to state 57


State 90

   23 prec5: prec5 BIN_OP_REL . prec4

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 120
    term          go to state 56
    functionCall  go to state 57


State 91

   25 prec6: prec6 BIN_OP_EQ . prec5

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 121
    term          go to state 56
    functionCall  go to state 57


State 92

   27 prec7: prec7 BIN_OP_BAND . prec6

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 122
    term          go to state 56
    functionCall  go to state 57


State 93

   29 prec8: prec8 BIN_OP_BXOR . prec7

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 123
    term          go to state 56
    functionCall  go to state 57


State 94

   31 prec9: prec9 BIN_OP_BOR . prec8

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 124
    term          go to state 56
    functionCall  go to state 57


State 95

   33 prec10: prec10 BIN_OP_LAND . prec9

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 125
    term          go to state 56
    functionCall  go to state 57


State 96

   37 prec12: prec11 BIN_OP_ASSIGN . prec12

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 126
    term          go to state 56
    functionCall  go to state 57


State 97

   35 prec11: prec11 BIN_OP_LOR . prec10

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 127
    term          go to state 56
    functionCall  go to state 57


State 98

   42 term: term OPEN_SQUARE . expression CLOSE_SQUARE

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 128
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 99

   63 statement: commaSeparatedDeclarations SEMICOLON .

    $default  reduce using rule 63 (statement)


State 100

   66 block: OPEN_CURLY statements CLOSE_CURLY .

    $default  reduce using rule 66 (block)


State 101

   65 statements: statements statement .

    $default  reduce using rule 65 (statements)


State 102

   70 elseStatement: ELSE_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 129


State 103

   72 ifElseStatement: ifStatement elseStatement .

    $default  reduce using rule 72 (ifElseStatement)


State 104

   49 identifier: identifier OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 49 (identifier)


State 105

   69 ifStatement: IF_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 130


State 106

   67 whileStatement: WHILE_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 131


State 107

   68 forStatement: FOR_K OPEN_BRACKET expression . SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 132


State 108

   54 statement: RETURN_K expression SEMICOLON .

    $default  reduce using rule 54 (statement)


State 109

    5 inputStatement: INPUT_K OPEN_BRACKET IDENTIFIER . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 133


State 110

    6 outputStatement: OUTPUT_K OPEN_BRACKET IDENTIFIER . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 134


State 111

    7 outputStatement: OUTPUT_K OPEN_BRACKET literal . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 135


State 112

   43 term: OPEN_BRACKET expression CLOSE_BRACKET .

    $default  reduce using rule 43 (term)


State 113

   46 functionCall: IDENTIFIER OPEN_BRACKET CLOSE_BRACKET .

    $default  reduce using rule 46 (functionCall)


State 114

   44 commaSeparatedExpressions: expression .

    $default  reduce using rule 44 (commaSeparatedExpressions)


State 115

   45 commaSeparatedExpressions: commaSeparatedExpressions . COMMA expression
   47 functionCall: IDENTIFIER OPEN_BRACKET commaSeparatedExpressions . CLOSE_BRACKET

    COMMA          shift, and go to state 136
    CLOSE_BRACKET  shift, and go to state 137


State 116

   17 prec2: prec2 OP_MUL prec1 .

    $default  reduce using rule 17 (prec2)


State 117

   16 prec2: prec2 BIN_OP_MUL prec1 .

    $default  reduce using rule 16 (prec2)


State 118

   16 prec2: prec2 . BIN_OP_MUL prec1
   17      | prec2 . OP_MUL prec1
   19 prec3: prec3 BIN_OP_ADD prec2 .

    OP_MUL      shift, and go to state 86
    BIN_OP_MUL  shift, and go to state 87

    $default  reduce using rule 19 (prec3)


State 119

   19 prec3: prec3 . BIN_OP_ADD prec2
   21 prec4: prec4 BIN_OP_SHIFT prec3 .

    BIN_OP_ADD  shift, and go to state 88

    $default  reduce using rule 21 (prec4)


State 120

   21 prec4: prec4 . BIN_OP_SHIFT prec3
   23 prec5: prec5 BIN_OP_REL prec4 .

    BIN_OP_SHIFT  shift, and go to state 89

    $default  reduce using rule 23 (prec5)


State 121

   23 prec5: prec5 . BIN_OP_REL prec4
   25 prec6: prec6 BIN_OP_EQ prec5 .

    BIN_OP_REL  shift, and go to state 90

    $default  reduce using rule 25 (prec6)


State 122

   25 prec6: prec6 . BIN_OP_EQ prec5
   27 prec7: prec7 BIN_OP_BAND prec6 .

    BIN_OP_EQ  shift, and go to state 91

    $default  reduce using rule 27 (prec7)


State 123

   27 prec7: prec7 . BIN_OP_BAND prec6
   29 prec8: prec8 BIN_OP_BXOR prec7 .

    BIN_OP_BAND  shift, and go to state 92

    $default  reduce using rule 29 (prec8)


State 124

   29 prec8: prec8 . BIN_OP_BXOR prec7
   31 prec9: prec9 BIN_OP_BOR prec8 .

    BIN_OP_BXOR  shift, and go to state 93

    $default  reduce using rule 31 (prec9)


State 125

   31 prec9: prec9 . BIN_OP_BOR prec8
   33 prec10: prec10 BIN_OP_LAND prec9 .

    BIN_OP_BOR  shift, and go to state 94

    $default  reduce using rule 33 (prec10)


State 126

   37 prec12: prec11 BIN_OP_ASSIGN prec12 .

    $default  reduce using rule 37 (prec12)


State 127

   33 prec10: prec10 . BIN_OP_LAND prec9
   35 prec11: prec11 BIN_OP_LOR prec10 .

    BIN_OP_LAND  shift, and go to state 95

    $default  reduce using rule 35 (prec11)


State 128

   42 term: term OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 138


State 129

   70 elseStatement: ELSE_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 139
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 130

   69 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 140


State 131

   67 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 141


State 132

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON . expression SEMICOLON expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 142
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 133

    5 inputStatement: INPUT_K OPEN_BRACKET IDENTIFIER CLOSE_BRACKET .

    $default  reduce using rule 5 (inputStatement)


State 134

    6 outputStatement: OUTPUT_K OPEN_BRACKET IDENTIFIER CLOSE_BRACKET .

    $default  reduce using rule 6 (outputStatement)


State 135

    7 outputStatement: OUTPUT_K OPEN_BRACKET literal CLOSE_BRACKET .

    $default  reduce using rule 7 (outputStatement)


State 136

   45 commaSeparatedExpressions: commaSeparatedExpressions COMMA . expression

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 143
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 137

   47 functionCall: IDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET .

    $default  reduce using rule 47 (functionCall)


State 138

   42 term: term OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 42 (term)


State 139

   70 elseStatement: ELSE_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 144


State 140

   69 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 69 (ifStatement)


State 141

   67 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 67 (whileStatement)


State 142

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression . SEMICOLON expression CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 145


State 143

   45 commaSeparatedExpressions: commaSeparatedExpressions COMMA expression .

    $default  reduce using rule 45 (commaSeparatedExpressions)


State 144

   70 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 146


State 145

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON . expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CONSTANT      shift, and go to state 23
    OP_MUL        shift, and go to state 33
    BIN_OP_ADD    shift, and go to state 34
    BIN_OP_BAND   shift, and go to state 35
    UN_OP         shift, and go to state 36
    OPEN_BRACKET  shift, and go to state 37
    IDENTIFIER    shift, and go to state 38

    literal       go to state 39
    expression    go to state 147
    prec0         go to state 43
    prec1         go to state 44
    prec2         go to state 45
    prec3         go to state 46
    prec4         go to state 47
    prec5         go to state 48
    prec6         go to state 49
    prec7         go to state 50
    prec8         go to state 51
    prec9         go to state 52
    prec10        go to state 53
    prec11        go to state 54
    prec12        go to state 55
    term          go to state 56
    functionCall  go to state 57


State 146

   70 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 70 (elseStatement)


State 147

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 148


State 148

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 17

    block  go to state 149


State 149

   68 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 68 (forStatement)
