Grammar

    0 $accept: program $end

    1 program: functionDefinition
    2        | program functionDefinition

    3 literal: STRING
    4        | CHAR
    5        | CONSTANT

    6 arrayAccessList: OPEN_SQUARE expression CLOSE_SQUARE
    7                | arrayAccessList OPEN_SQUARE expression CLOSE_SQUARE

    8 term: IDENTIFIER
    9     | literal
   10     | functionCall
   11     | OPEN_BRACKET expression CLOSE_BRACKET

   12 arrayAccessTerm: term arrayAccessList
   13                | term

   14 prec0: arrayAccessTerm UN_OP
   15      | arrayAccessTerm

   16 prec1: UN_OP prec0
   17      | BIN_OP_ADD prec0
   18      | BIN_OP_BAND prec0
   19      | OP_MUL prec1
   20      | prec0

   21 prec2: prec2 BIN_OP_MUL prec1
   22      | prec2 OP_MUL prec1
   23      | prec1

   24 prec3: prec3 BIN_OP_ADD prec2
   25      | prec2

   26 prec4: prec4 BIN_OP_SHIFT prec3
   27      | prec3

   28 prec5: prec5 BIN_OP_REL prec4
   29      | prec4

   30 prec6: prec6 BIN_OP_EQ prec5
   31      | prec5

   32 prec7: prec7 BIN_OP_BAND prec6
   33      | prec6

   34 prec8: prec8 BIN_OP_BXOR prec7
   35      | prec7

   36 prec9: prec9 BIN_OP_BOR prec8
   37      | prec8

   38 prec10: prec10 BIN_OP_LAND prec9
   39       | prec9

   40 prec11: prec11 BIN_OP_LOR prec10
   41       | prec10

   42 prec12: prec11 QUESTION prec11 COLON prec11
   43       | prec11

   44 prec13: prec12 BIN_OP_ASSIGN prec13
   45       | prec12

   46 expression: prec13

   47 commaSeparatedExpressions: expression
   48                          | commaSeparatedExpressions COMMA expression

   49 functionCall: IDENTIFIER OPEN_BRACKET CLOSE_BRACKET
   50             | IDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET
   51             | INPUT_K OPEN_BRACKET arrayAccessTerm CLOSE_BRACKET
   52             | OUTPUT_K OPEN_BRACKET expression CLOSE_BRACKET

   53 declaration: DATATYPE functionIdentifier
   54            | DATATYPE functionIdentifier arrayAccessList

   55 commaSeparatedDeclarations: declaration
   56                           | commaSeparatedDeclarations COMMA declaration

   57 statement: SEMICOLON
   58          | RETURN_K expression SEMICOLON
   59          | RETURN_K SEMICOLON
   60          | BREAK_K SEMICOLON
   61          | CONTINUE_K SEMICOLON
   62          | ifElseStatement
   63          | forStatement
   64          | whileStatement
   65          | expression SEMICOLON
   66          | commaSeparatedDeclarations SEMICOLON

   67 statements: statement
   68           | statement statements

   69 block: OPEN_CURLY statements CLOSE_CURLY

   70 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   72             | FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   73             | FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   75             | FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON CLOSE_BRACKET block
   76             | FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   77             | FOR_K OPEN_BRACKET SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   78             | FOR_K OPEN_BRACKET SEMICOLON SEMICOLON CLOSE_BRACKET block

   79 ifElseStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block
   80                | IF_K OPEN_BRACKET expression CLOSE_BRACKET block ELSE_K block

   81 functionIdentifier: IDENTIFIER
   82                   | OP_MUL functionIdentifier

   83 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   84                   | DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET block


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 3
CHAR (259) 4
CONSTANT (260) 5
DATATYPE (261) 53 54 83 84
IF_K (262) 79 80
ELSE_K (263) 80
WHILE_K (264) 70
FOR_K (265) 71 72 73 74 75 76 77 78
RETURN_K (266) 58 59
BREAK_K (267) 60
CONTINUE_K (268) 61
INPUT_K (269) 51
OUTPUT_K (270) 52
SEMICOLON (271) 57 58 59 60 61 65 66 71 72 73 74 75 76 77 78
COMMA (272) 48 56
OP_MUL (273) 19 22 82
BIN_OP_MUL (274) 21
BIN_OP_ADD (275) 17 24
BIN_OP_SHIFT (276) 26
BIN_OP_REL (277) 28
BIN_OP_EQ (278) 30
BIN_OP_ASSIGN (279) 44
BIN_OP_BAND (280) 18 32
BIN_OP_BOR (281) 36
BIN_OP_BXOR (282) 34
BIN_OP_LAND (283) 38
BIN_OP_LOR (284) 40
UN_OP (285) 14 16
QUESTION (286) 42
COLON (287) 42
OPEN_BRACKET (288) 11 49 50 51 52 70 71 72 73 74 75 76 77 78 79 80
    83 84
CLOSE_BRACKET (289) 11 49 50 51 52 70 71 72 73 74 75 76 77 78 79 80
    83 84
OPEN_SQUARE (290) 6 7
CLOSE_SQUARE (291) 6 7
OPEN_CURLY (292) 69
CLOSE_CURLY (293) 69
IDENTIFIER (294) 8 49 50 81


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0 2
literal (42)
    on left: 3 4 5, on right: 9
arrayAccessList (43)
    on left: 6 7, on right: 7 12 54
term (44)
    on left: 8 9 10 11, on right: 12 13
arrayAccessTerm (45)
    on left: 12 13, on right: 14 15 51
prec0 (46)
    on left: 14 15, on right: 16 17 18 20
prec1 (47)
    on left: 16 17 18 19 20, on right: 19 21 22 23
prec2 (48)
    on left: 21 22 23, on right: 21 22 24 25
prec3 (49)
    on left: 24 25, on right: 24 26 27
prec4 (50)
    on left: 26 27, on right: 26 28 29
prec5 (51)
    on left: 28 29, on right: 28 30 31
prec6 (52)
    on left: 30 31, on right: 30 32 33
prec7 (53)
    on left: 32 33, on right: 32 34 35
prec8 (54)
    on left: 34 35, on right: 34 36 37
prec9 (55)
    on left: 36 37, on right: 36 38 39
prec10 (56)
    on left: 38 39, on right: 38 40 41
prec11 (57)
    on left: 40 41, on right: 40 42 43
prec12 (58)
    on left: 42 43, on right: 44 45
prec13 (59)
    on left: 44 45, on right: 44 46
expression (60)
    on left: 46, on right: 6 7 11 47 48 52 58 65 70 71 72 73 74 75
    76 77 79 80
commaSeparatedExpressions (61)
    on left: 47 48, on right: 48 50
functionCall (62)
    on left: 49 50 51 52, on right: 10
declaration (63)
    on left: 53 54, on right: 55 56
commaSeparatedDeclarations (64)
    on left: 55 56, on right: 56 66 83
statement (65)
    on left: 57 58 59 60 61 62 63 64 65 66, on right: 67 68
statements (66)
    on left: 67 68, on right: 68 69
block (67)
    on left: 69, on right: 70 71 72 73 74 75 76 77 78 79 80 83 84
whileStatement (68)
    on left: 70, on right: 64
forStatement (69)
    on left: 71 72 73 74 75 76 77 78, on right: 63
ifElseStatement (70)
    on left: 79 80, on right: 62
functionIdentifier (71)
    on left: 81 82, on right: 53 54 82 83 84
functionDefinition (72)
    on left: 83 84, on right: 1 2


State 0

    0 $accept: . program $end

    DATATYPE  shift, and go to state 1

    program             go to state 2
    functionDefinition  go to state 3


State 1

   83 functionDefinition: DATATYPE . functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   84                   | DATATYPE . functionIdentifier OPEN_BRACKET CLOSE_BRACKET block

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    functionIdentifier  go to state 6


State 2

    0 $accept: program . $end
    2 program: program . functionDefinition

    $end      shift, and go to state 7
    DATATYPE  shift, and go to state 1

    functionDefinition  go to state 8


State 3

    1 program: functionDefinition .

    $default  reduce using rule 1 (program)


State 4

   82 functionIdentifier: OP_MUL . functionIdentifier

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    functionIdentifier  go to state 9


State 5

   81 functionIdentifier: IDENTIFIER .

    $default  reduce using rule 81 (functionIdentifier)


State 6

   83 functionDefinition: DATATYPE functionIdentifier . OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   84                   | DATATYPE functionIdentifier . OPEN_BRACKET CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 program: program functionDefinition .

    $default  reduce using rule 2 (program)


State 9

   82 functionIdentifier: OP_MUL functionIdentifier .

    $default  reduce using rule 82 (functionIdentifier)


State 10

   83 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET . commaSeparatedDeclarations CLOSE_BRACKET block
   84                   | DATATYPE functionIdentifier OPEN_BRACKET . CLOSE_BRACKET block

    DATATYPE       shift, and go to state 11
    CLOSE_BRACKET  shift, and go to state 12

    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 14


State 11

   53 declaration: DATATYPE . functionIdentifier
   54            | DATATYPE . functionIdentifier arrayAccessList

    OP_MUL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    functionIdentifier  go to state 15


State 12

   84 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 17


State 13

   55 commaSeparatedDeclarations: declaration .

    $default  reduce using rule 55 (commaSeparatedDeclarations)


State 14

   56 commaSeparatedDeclarations: commaSeparatedDeclarations . COMMA declaration
   83 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations . CLOSE_BRACKET block

    COMMA          shift, and go to state 18
    CLOSE_BRACKET  shift, and go to state 19


State 15

   53 declaration: DATATYPE functionIdentifier .
   54            | DATATYPE functionIdentifier . arrayAccessList

    OPEN_SQUARE  shift, and go to state 20

    $default  reduce using rule 53 (declaration)

    arrayAccessList  go to state 21


State 16

   69 block: OPEN_CURLY . statements CLOSE_CURLY

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    DATATYPE      shift, and go to state 11
    IF_K          shift, and go to state 25
    WHILE_K       shift, and go to state 26
    FOR_K         shift, and go to state 27
    RETURN_K      shift, and go to state 28
    BREAK_K       shift, and go to state 29
    CONTINUE_K    shift, and go to state 30
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 33
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal                     go to state 40
    term                        go to state 41
    arrayAccessTerm             go to state 42
    prec0                       go to state 43
    prec1                       go to state 44
    prec2                       go to state 45
    prec3                       go to state 46
    prec4                       go to state 47
    prec5                       go to state 48
    prec6                       go to state 49
    prec7                       go to state 50
    prec8                       go to state 51
    prec9                       go to state 52
    prec10                      go to state 53
    prec11                      go to state 54
    prec12                      go to state 55
    prec13                      go to state 56
    expression                  go to state 57
    functionCall                go to state 58
    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 59
    statement                   go to state 60
    statements                  go to state 61
    whileStatement              go to state 62
    forStatement                go to state 63
    ifElseStatement             go to state 64


State 17

   84 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET CLOSE_BRACKET block .

    $default  reduce using rule 84 (functionDefinition)


State 18

   56 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA . declaration

    DATATYPE  shift, and go to state 11

    declaration  go to state 65


State 19

   83 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 66


State 20

    6 arrayAccessList: OPEN_SQUARE . expression CLOSE_SQUARE

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 67
    functionCall     go to state 58


State 21

    7 arrayAccessList: arrayAccessList . OPEN_SQUARE expression CLOSE_SQUARE
   54 declaration: DATATYPE functionIdentifier arrayAccessList .

    OPEN_SQUARE  shift, and go to state 68

    $default  reduce using rule 54 (declaration)


State 22

    3 literal: STRING .

    $default  reduce using rule 3 (literal)


State 23

    4 literal: CHAR .

    $default  reduce using rule 4 (literal)


State 24

    5 literal: CONSTANT .

    $default  reduce using rule 5 (literal)


State 25

   79 ifElseStatement: IF_K . OPEN_BRACKET expression CLOSE_BRACKET block
   80                | IF_K . OPEN_BRACKET expression CLOSE_BRACKET block ELSE_K block

    OPEN_BRACKET  shift, and go to state 69


State 26

   70 whileStatement: WHILE_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 70


State 27

   71 forStatement: FOR_K . OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   72             | FOR_K . OPEN_BRACKET SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   73             | FOR_K . OPEN_BRACKET expression SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K . OPEN_BRACKET expression SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   75             | FOR_K . OPEN_BRACKET expression SEMICOLON SEMICOLON CLOSE_BRACKET block
   76             | FOR_K . OPEN_BRACKET SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   77             | FOR_K . OPEN_BRACKET SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   78             | FOR_K . OPEN_BRACKET SEMICOLON SEMICOLON CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 71


State 28

   58 statement: RETURN_K . expression SEMICOLON
   59          | RETURN_K . SEMICOLON

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 72
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 73
    functionCall     go to state 58


State 29

   60 statement: BREAK_K . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 30

   61 statement: CONTINUE_K . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 31

   51 functionCall: INPUT_K . OPEN_BRACKET arrayAccessTerm CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 76


State 32

   52 functionCall: OUTPUT_K . OPEN_BRACKET expression CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 77


State 33

   57 statement: SEMICOLON .

    $default  reduce using rule 57 (statement)


State 34

   19 prec1: OP_MUL . prec1

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 78
    functionCall     go to state 58


State 35

   17 prec1: BIN_OP_ADD . prec0

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 79
    functionCall     go to state 58


State 36

   18 prec1: BIN_OP_BAND . prec0

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 80
    functionCall     go to state 58


State 37

   16 prec1: UN_OP . prec0

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 81
    functionCall     go to state 58


State 38

   11 term: OPEN_BRACKET . expression CLOSE_BRACKET

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 82
    functionCall     go to state 58


State 39

    8 term: IDENTIFIER .
   49 functionCall: IDENTIFIER . OPEN_BRACKET CLOSE_BRACKET
   50             | IDENTIFIER . OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 83

    $default  reduce using rule 8 (term)


State 40

    9 term: literal .

    $default  reduce using rule 9 (term)


State 41

   12 arrayAccessTerm: term . arrayAccessList
   13                | term .

    OPEN_SQUARE  shift, and go to state 20

    $default  reduce using rule 13 (arrayAccessTerm)

    arrayAccessList  go to state 84


State 42

   14 prec0: arrayAccessTerm . UN_OP
   15      | arrayAccessTerm .

    UN_OP  shift, and go to state 85

    $default  reduce using rule 15 (prec0)


State 43

   20 prec1: prec0 .

    $default  reduce using rule 20 (prec1)


State 44

   23 prec2: prec1 .

    $default  reduce using rule 23 (prec2)


State 45

   21 prec2: prec2 . BIN_OP_MUL prec1
   22      | prec2 . OP_MUL prec1
   25 prec3: prec2 .

    OP_MUL      shift, and go to state 86
    BIN_OP_MUL  shift, and go to state 87

    $default  reduce using rule 25 (prec3)


State 46

   24 prec3: prec3 . BIN_OP_ADD prec2
   27 prec4: prec3 .

    BIN_OP_ADD  shift, and go to state 88

    $default  reduce using rule 27 (prec4)


State 47

   26 prec4: prec4 . BIN_OP_SHIFT prec3
   29 prec5: prec4 .

    BIN_OP_SHIFT  shift, and go to state 89

    $default  reduce using rule 29 (prec5)


State 48

   28 prec5: prec5 . BIN_OP_REL prec4
   31 prec6: prec5 .

    BIN_OP_REL  shift, and go to state 90

    $default  reduce using rule 31 (prec6)


State 49

   30 prec6: prec6 . BIN_OP_EQ prec5
   33 prec7: prec6 .

    BIN_OP_EQ  shift, and go to state 91

    $default  reduce using rule 33 (prec7)


State 50

   32 prec7: prec7 . BIN_OP_BAND prec6
   35 prec8: prec7 .

    BIN_OP_BAND  shift, and go to state 92

    $default  reduce using rule 35 (prec8)


State 51

   34 prec8: prec8 . BIN_OP_BXOR prec7
   37 prec9: prec8 .

    BIN_OP_BXOR  shift, and go to state 93

    $default  reduce using rule 37 (prec9)


State 52

   36 prec9: prec9 . BIN_OP_BOR prec8
   39 prec10: prec9 .

    BIN_OP_BOR  shift, and go to state 94

    $default  reduce using rule 39 (prec10)


State 53

   38 prec10: prec10 . BIN_OP_LAND prec9
   41 prec11: prec10 .

    BIN_OP_LAND  shift, and go to state 95

    $default  reduce using rule 41 (prec11)


State 54

   40 prec11: prec11 . BIN_OP_LOR prec10
   42 prec12: prec11 . QUESTION prec11 COLON prec11
   43       | prec11 .

    BIN_OP_LOR  shift, and go to state 96
    QUESTION    shift, and go to state 97

    $default  reduce using rule 43 (prec12)


State 55

   44 prec13: prec12 . BIN_OP_ASSIGN prec13
   45       | prec12 .

    BIN_OP_ASSIGN  shift, and go to state 98

    $default  reduce using rule 45 (prec13)


State 56

   46 expression: prec13 .

    $default  reduce using rule 46 (expression)


State 57

   65 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 58

   10 term: functionCall .

    $default  reduce using rule 10 (term)


State 59

   56 commaSeparatedDeclarations: commaSeparatedDeclarations . COMMA declaration
   66 statement: commaSeparatedDeclarations . SEMICOLON

    SEMICOLON  shift, and go to state 100
    COMMA      shift, and go to state 18


State 60

   67 statements: statement .
   68           | statement . statements

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    DATATYPE      shift, and go to state 11
    IF_K          shift, and go to state 25
    WHILE_K       shift, and go to state 26
    FOR_K         shift, and go to state 27
    RETURN_K      shift, and go to state 28
    BREAK_K       shift, and go to state 29
    CONTINUE_K    shift, and go to state 30
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 33
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    $default  reduce using rule 67 (statements)

    literal                     go to state 40
    term                        go to state 41
    arrayAccessTerm             go to state 42
    prec0                       go to state 43
    prec1                       go to state 44
    prec2                       go to state 45
    prec3                       go to state 46
    prec4                       go to state 47
    prec5                       go to state 48
    prec6                       go to state 49
    prec7                       go to state 50
    prec8                       go to state 51
    prec9                       go to state 52
    prec10                      go to state 53
    prec11                      go to state 54
    prec12                      go to state 55
    prec13                      go to state 56
    expression                  go to state 57
    functionCall                go to state 58
    declaration                 go to state 13
    commaSeparatedDeclarations  go to state 59
    statement                   go to state 60
    statements                  go to state 101
    whileStatement              go to state 62
    forStatement                go to state 63
    ifElseStatement             go to state 64


State 61

   69 block: OPEN_CURLY statements . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 102


State 62

   64 statement: whileStatement .

    $default  reduce using rule 64 (statement)


State 63

   63 statement: forStatement .

    $default  reduce using rule 63 (statement)


State 64

   62 statement: ifElseStatement .

    $default  reduce using rule 62 (statement)


State 65

   56 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA declaration .

    $default  reduce using rule 56 (commaSeparatedDeclarations)


State 66

   83 functionDefinition: DATATYPE functionIdentifier OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block .

    $default  reduce using rule 83 (functionDefinition)


State 67

    6 arrayAccessList: OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 103


State 68

    7 arrayAccessList: arrayAccessList OPEN_SQUARE . expression CLOSE_SQUARE

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 104
    functionCall     go to state 58


State 69

   79 ifElseStatement: IF_K OPEN_BRACKET . expression CLOSE_BRACKET block
   80                | IF_K OPEN_BRACKET . expression CLOSE_BRACKET block ELSE_K block

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 105
    functionCall     go to state 58


State 70

   70 whileStatement: WHILE_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 106
    functionCall     go to state 58


State 71

   71 forStatement: FOR_K OPEN_BRACKET . expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   72             | FOR_K OPEN_BRACKET . SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   73             | FOR_K OPEN_BRACKET . expression SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET . expression SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   75             | FOR_K OPEN_BRACKET . expression SEMICOLON SEMICOLON CLOSE_BRACKET block
   76             | FOR_K OPEN_BRACKET . SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   77             | FOR_K OPEN_BRACKET . SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   78             | FOR_K OPEN_BRACKET . SEMICOLON SEMICOLON CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 107
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 108
    functionCall     go to state 58


State 72

   59 statement: RETURN_K SEMICOLON .

    $default  reduce using rule 59 (statement)


State 73

   58 statement: RETURN_K expression . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 74

   60 statement: BREAK_K SEMICOLON .

    $default  reduce using rule 60 (statement)


State 75

   61 statement: CONTINUE_K SEMICOLON .

    $default  reduce using rule 61 (statement)


State 76

   51 functionCall: INPUT_K OPEN_BRACKET . arrayAccessTerm CLOSE_BRACKET

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 110
    functionCall     go to state 58


State 77

   52 functionCall: OUTPUT_K OPEN_BRACKET . expression CLOSE_BRACKET

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 111
    functionCall     go to state 58


State 78

   19 prec1: OP_MUL prec1 .

    $default  reduce using rule 19 (prec1)


State 79

   17 prec1: BIN_OP_ADD prec0 .

    $default  reduce using rule 17 (prec1)


State 80

   18 prec1: BIN_OP_BAND prec0 .

    $default  reduce using rule 18 (prec1)


State 81

   16 prec1: UN_OP prec0 .

    $default  reduce using rule 16 (prec1)


State 82

   11 term: OPEN_BRACKET expression . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 112


State 83

   49 functionCall: IDENTIFIER OPEN_BRACKET . CLOSE_BRACKET
   50             | IDENTIFIER OPEN_BRACKET . commaSeparatedExpressions CLOSE_BRACKET

    STRING         shift, and go to state 22
    CHAR           shift, and go to state 23
    CONSTANT       shift, and go to state 24
    INPUT_K        shift, and go to state 31
    OUTPUT_K       shift, and go to state 32
    OP_MUL         shift, and go to state 34
    BIN_OP_ADD     shift, and go to state 35
    BIN_OP_BAND    shift, and go to state 36
    UN_OP          shift, and go to state 37
    OPEN_BRACKET   shift, and go to state 38
    CLOSE_BRACKET  shift, and go to state 113
    IDENTIFIER     shift, and go to state 39

    literal                    go to state 40
    term                       go to state 41
    arrayAccessTerm            go to state 42
    prec0                      go to state 43
    prec1                      go to state 44
    prec2                      go to state 45
    prec3                      go to state 46
    prec4                      go to state 47
    prec5                      go to state 48
    prec6                      go to state 49
    prec7                      go to state 50
    prec8                      go to state 51
    prec9                      go to state 52
    prec10                     go to state 53
    prec11                     go to state 54
    prec12                     go to state 55
    prec13                     go to state 56
    expression                 go to state 114
    commaSeparatedExpressions  go to state 115
    functionCall               go to state 58


State 84

    7 arrayAccessList: arrayAccessList . OPEN_SQUARE expression CLOSE_SQUARE
   12 arrayAccessTerm: term arrayAccessList .

    OPEN_SQUARE  shift, and go to state 68

    $default  reduce using rule 12 (arrayAccessTerm)


State 85

   14 prec0: arrayAccessTerm UN_OP .

    $default  reduce using rule 14 (prec0)


State 86

   22 prec2: prec2 OP_MUL . prec1

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 116
    functionCall     go to state 58


State 87

   21 prec2: prec2 BIN_OP_MUL . prec1

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 117
    functionCall     go to state 58


State 88

   24 prec3: prec3 BIN_OP_ADD . prec2

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 118
    functionCall     go to state 58


State 89

   26 prec4: prec4 BIN_OP_SHIFT . prec3

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 119
    functionCall     go to state 58


State 90

   28 prec5: prec5 BIN_OP_REL . prec4

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 120
    functionCall     go to state 58


State 91

   30 prec6: prec6 BIN_OP_EQ . prec5

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 121
    functionCall     go to state 58


State 92

   32 prec7: prec7 BIN_OP_BAND . prec6

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 122
    functionCall     go to state 58


State 93

   34 prec8: prec8 BIN_OP_BXOR . prec7

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 123
    functionCall     go to state 58


State 94

   36 prec9: prec9 BIN_OP_BOR . prec8

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 124
    functionCall     go to state 58


State 95

   38 prec10: prec10 BIN_OP_LAND . prec9

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 125
    functionCall     go to state 58


State 96

   40 prec11: prec11 BIN_OP_LOR . prec10

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 126
    functionCall     go to state 58


State 97

   42 prec12: prec11 QUESTION . prec11 COLON prec11

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 127
    functionCall     go to state 58


State 98

   44 prec13: prec12 BIN_OP_ASSIGN . prec13

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 128
    functionCall     go to state 58


State 99

   65 statement: expression SEMICOLON .

    $default  reduce using rule 65 (statement)


State 100

   66 statement: commaSeparatedDeclarations SEMICOLON .

    $default  reduce using rule 66 (statement)


State 101

   68 statements: statement statements .

    $default  reduce using rule 68 (statements)


State 102

   69 block: OPEN_CURLY statements CLOSE_CURLY .

    $default  reduce using rule 69 (block)


State 103

    6 arrayAccessList: OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 6 (arrayAccessList)


State 104

    7 arrayAccessList: arrayAccessList OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 129


State 105

   79 ifElseStatement: IF_K OPEN_BRACKET expression . CLOSE_BRACKET block
   80                | IF_K OPEN_BRACKET expression . CLOSE_BRACKET block ELSE_K block

    CLOSE_BRACKET  shift, and go to state 130


State 106

   70 whileStatement: WHILE_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 131


State 107

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON . expression SEMICOLON expression CLOSE_BRACKET block
   76             | FOR_K OPEN_BRACKET SEMICOLON . expression SEMICOLON CLOSE_BRACKET block
   77             | FOR_K OPEN_BRACKET SEMICOLON . SEMICOLON expression CLOSE_BRACKET block
   78             | FOR_K OPEN_BRACKET SEMICOLON . SEMICOLON CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 132
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 133
    functionCall     go to state 58


State 108

   71 forStatement: FOR_K OPEN_BRACKET expression . SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block
   73             | FOR_K OPEN_BRACKET expression . SEMICOLON SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET expression . SEMICOLON expression SEMICOLON CLOSE_BRACKET block
   75             | FOR_K OPEN_BRACKET expression . SEMICOLON SEMICOLON CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 134


State 109

   58 statement: RETURN_K expression SEMICOLON .

    $default  reduce using rule 58 (statement)


State 110

   51 functionCall: INPUT_K OPEN_BRACKET arrayAccessTerm . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 135


State 111

   52 functionCall: OUTPUT_K OPEN_BRACKET expression . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 136


State 112

   11 term: OPEN_BRACKET expression CLOSE_BRACKET .

    $default  reduce using rule 11 (term)


State 113

   49 functionCall: IDENTIFIER OPEN_BRACKET CLOSE_BRACKET .

    $default  reduce using rule 49 (functionCall)


State 114

   47 commaSeparatedExpressions: expression .

    $default  reduce using rule 47 (commaSeparatedExpressions)


State 115

   48 commaSeparatedExpressions: commaSeparatedExpressions . COMMA expression
   50 functionCall: IDENTIFIER OPEN_BRACKET commaSeparatedExpressions . CLOSE_BRACKET

    COMMA          shift, and go to state 137
    CLOSE_BRACKET  shift, and go to state 138


State 116

   22 prec2: prec2 OP_MUL prec1 .

    $default  reduce using rule 22 (prec2)


State 117

   21 prec2: prec2 BIN_OP_MUL prec1 .

    $default  reduce using rule 21 (prec2)


State 118

   21 prec2: prec2 . BIN_OP_MUL prec1
   22      | prec2 . OP_MUL prec1
   24 prec3: prec3 BIN_OP_ADD prec2 .

    OP_MUL      shift, and go to state 86
    BIN_OP_MUL  shift, and go to state 87

    $default  reduce using rule 24 (prec3)


State 119

   24 prec3: prec3 . BIN_OP_ADD prec2
   26 prec4: prec4 BIN_OP_SHIFT prec3 .

    BIN_OP_ADD  shift, and go to state 88

    $default  reduce using rule 26 (prec4)


State 120

   26 prec4: prec4 . BIN_OP_SHIFT prec3
   28 prec5: prec5 BIN_OP_REL prec4 .

    BIN_OP_SHIFT  shift, and go to state 89

    $default  reduce using rule 28 (prec5)


State 121

   28 prec5: prec5 . BIN_OP_REL prec4
   30 prec6: prec6 BIN_OP_EQ prec5 .

    BIN_OP_REL  shift, and go to state 90

    $default  reduce using rule 30 (prec6)


State 122

   30 prec6: prec6 . BIN_OP_EQ prec5
   32 prec7: prec7 BIN_OP_BAND prec6 .

    BIN_OP_EQ  shift, and go to state 91

    $default  reduce using rule 32 (prec7)


State 123

   32 prec7: prec7 . BIN_OP_BAND prec6
   34 prec8: prec8 BIN_OP_BXOR prec7 .

    BIN_OP_BAND  shift, and go to state 92

    $default  reduce using rule 34 (prec8)


State 124

   34 prec8: prec8 . BIN_OP_BXOR prec7
   36 prec9: prec9 BIN_OP_BOR prec8 .

    BIN_OP_BXOR  shift, and go to state 93

    $default  reduce using rule 36 (prec9)


State 125

   36 prec9: prec9 . BIN_OP_BOR prec8
   38 prec10: prec10 BIN_OP_LAND prec9 .

    BIN_OP_BOR  shift, and go to state 94

    $default  reduce using rule 38 (prec10)


State 126

   38 prec10: prec10 . BIN_OP_LAND prec9
   40 prec11: prec11 BIN_OP_LOR prec10 .

    BIN_OP_LAND  shift, and go to state 95

    $default  reduce using rule 40 (prec11)


State 127

   40 prec11: prec11 . BIN_OP_LOR prec10
   42 prec12: prec11 QUESTION prec11 . COLON prec11

    BIN_OP_LOR  shift, and go to state 96
    COLON       shift, and go to state 139


State 128

   44 prec13: prec12 BIN_OP_ASSIGN prec13 .

    $default  reduce using rule 44 (prec13)


State 129

    7 arrayAccessList: arrayAccessList OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 7 (arrayAccessList)


State 130

   79 ifElseStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET . block
   80                | IF_K OPEN_BRACKET expression CLOSE_BRACKET . block ELSE_K block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 140


State 131

   70 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 141


State 132

   77 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON . expression CLOSE_BRACKET block
   78             | FOR_K OPEN_BRACKET SEMICOLON SEMICOLON . CLOSE_BRACKET block

    STRING         shift, and go to state 22
    CHAR           shift, and go to state 23
    CONSTANT       shift, and go to state 24
    INPUT_K        shift, and go to state 31
    OUTPUT_K       shift, and go to state 32
    OP_MUL         shift, and go to state 34
    BIN_OP_ADD     shift, and go to state 35
    BIN_OP_BAND    shift, and go to state 36
    UN_OP          shift, and go to state 37
    OPEN_BRACKET   shift, and go to state 38
    CLOSE_BRACKET  shift, and go to state 142
    IDENTIFIER     shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 143
    functionCall     go to state 58


State 133

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression . SEMICOLON expression CLOSE_BRACKET block
   76             | FOR_K OPEN_BRACKET SEMICOLON expression . SEMICOLON CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 144


State 134

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON . expression SEMICOLON expression CLOSE_BRACKET block
   73             | FOR_K OPEN_BRACKET expression SEMICOLON . SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET expression SEMICOLON . expression SEMICOLON CLOSE_BRACKET block
   75             | FOR_K OPEN_BRACKET expression SEMICOLON . SEMICOLON CLOSE_BRACKET block

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    SEMICOLON     shift, and go to state 145
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 146
    functionCall     go to state 58


State 135

   51 functionCall: INPUT_K OPEN_BRACKET arrayAccessTerm CLOSE_BRACKET .

    $default  reduce using rule 51 (functionCall)


State 136

   52 functionCall: OUTPUT_K OPEN_BRACKET expression CLOSE_BRACKET .

    $default  reduce using rule 52 (functionCall)


State 137

   48 commaSeparatedExpressions: commaSeparatedExpressions COMMA . expression

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 147
    functionCall     go to state 58


State 138

   50 functionCall: IDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET .

    $default  reduce using rule 50 (functionCall)


State 139

   42 prec12: prec11 QUESTION prec11 COLON . prec11

    STRING        shift, and go to state 22
    CHAR          shift, and go to state 23
    CONSTANT      shift, and go to state 24
    INPUT_K       shift, and go to state 31
    OUTPUT_K      shift, and go to state 32
    OP_MUL        shift, and go to state 34
    BIN_OP_ADD    shift, and go to state 35
    BIN_OP_BAND   shift, and go to state 36
    UN_OP         shift, and go to state 37
    OPEN_BRACKET  shift, and go to state 38
    IDENTIFIER    shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 148
    functionCall     go to state 58


State 140

   79 ifElseStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block .
   80                | IF_K OPEN_BRACKET expression CLOSE_BRACKET block . ELSE_K block

    ELSE_K  shift, and go to state 149

    $default  reduce using rule 79 (ifElseStatement)


State 141

   70 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 70 (whileStatement)


State 142

   78 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 150


State 143

   77 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 151


State 144

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON . expression CLOSE_BRACKET block
   76             | FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON . CLOSE_BRACKET block

    STRING         shift, and go to state 22
    CHAR           shift, and go to state 23
    CONSTANT       shift, and go to state 24
    INPUT_K        shift, and go to state 31
    OUTPUT_K       shift, and go to state 32
    OP_MUL         shift, and go to state 34
    BIN_OP_ADD     shift, and go to state 35
    BIN_OP_BAND    shift, and go to state 36
    UN_OP          shift, and go to state 37
    OPEN_BRACKET   shift, and go to state 38
    CLOSE_BRACKET  shift, and go to state 152
    IDENTIFIER     shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 153
    functionCall     go to state 58


State 145

   73 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON . expression CLOSE_BRACKET block
   75             | FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON . CLOSE_BRACKET block

    STRING         shift, and go to state 22
    CHAR           shift, and go to state 23
    CONSTANT       shift, and go to state 24
    INPUT_K        shift, and go to state 31
    OUTPUT_K       shift, and go to state 32
    OP_MUL         shift, and go to state 34
    BIN_OP_ADD     shift, and go to state 35
    BIN_OP_BAND    shift, and go to state 36
    UN_OP          shift, and go to state 37
    OPEN_BRACKET   shift, and go to state 38
    CLOSE_BRACKET  shift, and go to state 154
    IDENTIFIER     shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 155
    functionCall     go to state 58


State 146

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression . SEMICOLON expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET expression SEMICOLON expression . SEMICOLON CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 156


State 147

   48 commaSeparatedExpressions: commaSeparatedExpressions COMMA expression .

    $default  reduce using rule 48 (commaSeparatedExpressions)


State 148

   40 prec11: prec11 . BIN_OP_LOR prec10
   42 prec12: prec11 QUESTION prec11 COLON prec11 .

    BIN_OP_LOR  shift, and go to state 96

    $default  reduce using rule 42 (prec12)


State 149

   80 ifElseStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block ELSE_K . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 157


State 150

   78 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON CLOSE_BRACKET block .

    $default  reduce using rule 78 (forStatement)


State 151

   77 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 158


State 152

   76 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 159


State 153

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 160


State 154

   75 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 161


State 155

   73 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 162


State 156

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON . expression CLOSE_BRACKET block
   74             | FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON . CLOSE_BRACKET block

    STRING         shift, and go to state 22
    CHAR           shift, and go to state 23
    CONSTANT       shift, and go to state 24
    INPUT_K        shift, and go to state 31
    OUTPUT_K       shift, and go to state 32
    OP_MUL         shift, and go to state 34
    BIN_OP_ADD     shift, and go to state 35
    BIN_OP_BAND    shift, and go to state 36
    UN_OP          shift, and go to state 37
    OPEN_BRACKET   shift, and go to state 38
    CLOSE_BRACKET  shift, and go to state 163
    IDENTIFIER     shift, and go to state 39

    literal          go to state 40
    term             go to state 41
    arrayAccessTerm  go to state 42
    prec0            go to state 43
    prec1            go to state 44
    prec2            go to state 45
    prec3            go to state 46
    prec4            go to state 47
    prec5            go to state 48
    prec6            go to state 49
    prec7            go to state 50
    prec8            go to state 51
    prec9            go to state 52
    prec10           go to state 53
    prec11           go to state 54
    prec12           go to state 55
    prec13           go to state 56
    expression       go to state 164
    functionCall     go to state 58


State 157

   80 ifElseStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block ELSE_K block .

    $default  reduce using rule 80 (ifElseStatement)


State 158

   77 forStatement: FOR_K OPEN_BRACKET SEMICOLON SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 77 (forStatement)


State 159

   76 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON CLOSE_BRACKET block .

    $default  reduce using rule 76 (forStatement)


State 160

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 165


State 161

   75 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON CLOSE_BRACKET block .

    $default  reduce using rule 75 (forStatement)


State 162

   73 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 166


State 163

   74 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 167


State 164

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 168


State 165

   72 forStatement: FOR_K OPEN_BRACKET SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 72 (forStatement)


State 166

   73 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 73 (forStatement)


State 167

   74 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON CLOSE_BRACKET block .

    $default  reduce using rule 74 (forStatement)


State 168

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 16

    block  go to state 169


State 169

   71 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 71 (forStatement)
