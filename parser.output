Grammar

    0 $accept: program $end

    1 program: functionDefinition
    2        | program functionDefinition

    3 literal: STRING
    4        | CONSTANT

    5 inputStatement: INPUT_K OPEN_BRACKET INDENTIFIER CLOSE_BRACKET

    6 outputStatement: OUTPUT_K OPEN_BRACKET INDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K OPEN_BRACKET literal CLOSE_BRACKET

    8 expression: term
    9           | term BIN_OP expression

   10 commaSeparatedExpressions: expression
   11                          | commaSeparatedExpressions COMMA expression

   12 functionCall: INDENTIFIER OPEN_BRACKET CLOSE_BRACKET
   13             | INDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET

   14 term: INDENTIFIER
   15     | literal
   16     | functionCall
   17     | OPEN_BRACKET expression CLOSE_BRACKET
   18     | UN_OP term

   19 declaration: DATATYPE INDENTIFIER
   20            | declaration OPEN_SQUARE expression CLOSE_SQUARE

   21 commaSeparatedDeclarations: declaration
   22                           | commaSeparatedDeclarations COMMA declaration

   23 statement: SEMICOLON
   24          | RETURN_K expression SEMICOLON
   25          | BREAK_K SEMICOLON
   26          | CONTINUE_K SEMICOLON
   27          | ifElseStatement
   28          | forStatement
   29          | whileStatement
   30          | inputStatement SEMICOLON
   31          | outputStatement SEMICOLON
   32          | expression SEMICOLON
   33          | declaration SEMICOLON

   34 statements: statement
   35           | statements statement

   36 block: OPEN_CURLY statements CLOSE_CURLY

   37 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

   39 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block

   40 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET block

   41 ifElseStatement: ifStatement
   42                | ifStatement elseStatement

   43 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   44                   | DATATYPE INDENTIFIER OPEN_BRACKET CLOSE_BRACKET block


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 3
CONSTANT (259) 4
DATATYPE (260) 19 43 44
IF_K (261) 39
ELSE_K (262) 40
WHILE_K (263) 37
FOR_K (264) 38
RETURN_K (265) 24
BREAK_K (266) 25
CONTINUE_K (267) 26
INPUT_K (268) 5
OUTPUT_K (269) 6 7
SEMICOLON (270) 23 24 25 26 30 31 32 33 38
COMMA (271) 11 22
BIN_OP (272) 9
UN_OP (273) 18
OPEN_BRACKET (274) 5 6 7 12 13 17 37 38 39 40 43 44
CLOSE_BRACKET (275) 5 6 7 12 13 17 37 38 39 40 43 44
OPEN_SQUARE (276) 20
CLOSE_SQUARE (277) 20
OPEN_CURLY (278) 36
CLOSE_CURLY (279) 36
INDENTIFIER (280) 5 6 12 13 14 19 43 44


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1 2, on right: 0 2
literal (28)
    on left: 3 4, on right: 7 15
inputStatement (29)
    on left: 5, on right: 30
outputStatement (30)
    on left: 6 7, on right: 31
expression (31)
    on left: 8 9, on right: 9 10 11 17 20 24 32 37 38 39 40
commaSeparatedExpressions (32)
    on left: 10 11, on right: 11 13
functionCall (33)
    on left: 12 13, on right: 16
term (34)
    on left: 14 15 16 17 18, on right: 8 9 18
declaration (35)
    on left: 19 20, on right: 20 21 22 33
commaSeparatedDeclarations (36)
    on left: 21 22, on right: 22 43
statement (37)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 34 35
statements (38)
    on left: 34 35, on right: 35 36
block (39)
    on left: 36, on right: 37 38 39 40 43 44
whileStatement (40)
    on left: 37, on right: 29
forStatement (41)
    on left: 38, on right: 28
ifStatement (42)
    on left: 39, on right: 41 42
elseStatement (43)
    on left: 40, on right: 42
ifElseStatement (44)
    on left: 41 42, on right: 27
functionDefinition (45)
    on left: 43 44, on right: 1 2


State 0

    0 $accept: . program $end

    DATATYPE  shift, and go to state 1

    program             go to state 2
    functionDefinition  go to state 3


State 1

   43 functionDefinition: DATATYPE . INDENTIFIER OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   44                   | DATATYPE . INDENTIFIER OPEN_BRACKET CLOSE_BRACKET block

    INDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program . $end
    2 program: program . functionDefinition

    $end      shift, and go to state 5
    DATATYPE  shift, and go to state 1

    functionDefinition  go to state 6


State 3

    1 program: functionDefinition .

    $default  reduce using rule 1 (program)


State 4

   43 functionDefinition: DATATYPE INDENTIFIER . OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block
   44                   | DATATYPE INDENTIFIER . OPEN_BRACKET CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: program functionDefinition .

    $default  reduce using rule 2 (program)


State 7

   43 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET . commaSeparatedDeclarations CLOSE_BRACKET block
   44                   | DATATYPE INDENTIFIER OPEN_BRACKET . CLOSE_BRACKET block

    DATATYPE       shift, and go to state 8
    CLOSE_BRACKET  shift, and go to state 9

    declaration                 go to state 10
    commaSeparatedDeclarations  go to state 11


State 8

   19 declaration: DATATYPE . INDENTIFIER

    INDENTIFIER  shift, and go to state 12


State 9

   44 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 14


State 10

   20 declaration: declaration . OPEN_SQUARE expression CLOSE_SQUARE
   21 commaSeparatedDeclarations: declaration .

    OPEN_SQUARE  shift, and go to state 15

    $default  reduce using rule 21 (commaSeparatedDeclarations)


State 11

   22 commaSeparatedDeclarations: commaSeparatedDeclarations . COMMA declaration
   43 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET commaSeparatedDeclarations . CLOSE_BRACKET block

    COMMA          shift, and go to state 16
    CLOSE_BRACKET  shift, and go to state 17


State 12

   19 declaration: DATATYPE INDENTIFIER .

    $default  reduce using rule 19 (declaration)


State 13

   36 block: OPEN_CURLY . statements CLOSE_CURLY

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    DATATYPE      shift, and go to state 8
    IF_K          shift, and go to state 20
    WHILE_K       shift, and go to state 21
    FOR_K         shift, and go to state 22
    RETURN_K      shift, and go to state 23
    BREAK_K       shift, and go to state 24
    CONTINUE_K    shift, and go to state 25
    INPUT_K       shift, and go to state 26
    OUTPUT_K      shift, and go to state 27
    SEMICOLON     shift, and go to state 28
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal          go to state 32
    inputStatement   go to state 33
    outputStatement  go to state 34
    expression       go to state 35
    functionCall     go to state 36
    term             go to state 37
    declaration      go to state 38
    statement        go to state 39
    statements       go to state 40
    whileStatement   go to state 41
    forStatement     go to state 42
    ifStatement      go to state 43
    ifElseStatement  go to state 44


State 14

   44 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET CLOSE_BRACKET block .

    $default  reduce using rule 44 (functionDefinition)


State 15

   20 declaration: declaration OPEN_SQUARE . expression CLOSE_SQUARE

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 45
    functionCall  go to state 36
    term          go to state 37


State 16

   22 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA . declaration

    DATATYPE  shift, and go to state 8

    declaration  go to state 46


State 17

   43 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 47


State 18

    3 literal: STRING .

    $default  reduce using rule 3 (literal)


State 19

    4 literal: CONSTANT .

    $default  reduce using rule 4 (literal)


State 20

   39 ifStatement: IF_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 48


State 21

   37 whileStatement: WHILE_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 49


State 22

   38 forStatement: FOR_K . OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 50


State 23

   24 statement: RETURN_K . expression SEMICOLON

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 51
    functionCall  go to state 36
    term          go to state 37


State 24

   25 statement: BREAK_K . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 25

   26 statement: CONTINUE_K . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 26

    5 inputStatement: INPUT_K . OPEN_BRACKET INDENTIFIER CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 54


State 27

    6 outputStatement: OUTPUT_K . OPEN_BRACKET INDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K . OPEN_BRACKET literal CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 55


State 28

   23 statement: SEMICOLON .

    $default  reduce using rule 23 (statement)


State 29

   18 term: UN_OP . term

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    functionCall  go to state 36
    term          go to state 56


State 30

   17 term: OPEN_BRACKET . expression CLOSE_BRACKET

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 57
    functionCall  go to state 36
    term          go to state 37


State 31

   12 functionCall: INDENTIFIER . OPEN_BRACKET CLOSE_BRACKET
   13             | INDENTIFIER . OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET
   14 term: INDENTIFIER .

    OPEN_BRACKET  shift, and go to state 58

    $default  reduce using rule 14 (term)


State 32

   15 term: literal .

    $default  reduce using rule 15 (term)


State 33

   30 statement: inputStatement . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 34

   31 statement: outputStatement . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 35

   32 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 36

   16 term: functionCall .

    $default  reduce using rule 16 (term)


State 37

    8 expression: term .
    9           | term . BIN_OP expression

    BIN_OP  shift, and go to state 62

    $default  reduce using rule 8 (expression)


State 38

   20 declaration: declaration . OPEN_SQUARE expression CLOSE_SQUARE
   33 statement: declaration . SEMICOLON

    SEMICOLON    shift, and go to state 63
    OPEN_SQUARE  shift, and go to state 15


State 39

   34 statements: statement .

    $default  reduce using rule 34 (statements)


State 40

   35 statements: statements . statement
   36 block: OPEN_CURLY statements . CLOSE_CURLY

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    DATATYPE      shift, and go to state 8
    IF_K          shift, and go to state 20
    WHILE_K       shift, and go to state 21
    FOR_K         shift, and go to state 22
    RETURN_K      shift, and go to state 23
    BREAK_K       shift, and go to state 24
    CONTINUE_K    shift, and go to state 25
    INPUT_K       shift, and go to state 26
    OUTPUT_K      shift, and go to state 27
    SEMICOLON     shift, and go to state 28
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    CLOSE_CURLY   shift, and go to state 64
    INDENTIFIER   shift, and go to state 31

    literal          go to state 32
    inputStatement   go to state 33
    outputStatement  go to state 34
    expression       go to state 35
    functionCall     go to state 36
    term             go to state 37
    declaration      go to state 38
    statement        go to state 65
    whileStatement   go to state 41
    forStatement     go to state 42
    ifStatement      go to state 43
    ifElseStatement  go to state 44


State 41

   29 statement: whileStatement .

    $default  reduce using rule 29 (statement)


State 42

   28 statement: forStatement .

    $default  reduce using rule 28 (statement)


State 43

   41 ifElseStatement: ifStatement .
   42                | ifStatement . elseStatement

    ELSE_K  shift, and go to state 66

    $default  reduce using rule 41 (ifElseStatement)

    elseStatement  go to state 67


State 44

   27 statement: ifElseStatement .

    $default  reduce using rule 27 (statement)


State 45

   20 declaration: declaration OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 68


State 46

   20 declaration: declaration . OPEN_SQUARE expression CLOSE_SQUARE
   22 commaSeparatedDeclarations: commaSeparatedDeclarations COMMA declaration .

    OPEN_SQUARE  shift, and go to state 15

    $default  reduce using rule 22 (commaSeparatedDeclarations)


State 47

   43 functionDefinition: DATATYPE INDENTIFIER OPEN_BRACKET commaSeparatedDeclarations CLOSE_BRACKET block .

    $default  reduce using rule 43 (functionDefinition)


State 48

   39 ifStatement: IF_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 69
    functionCall  go to state 36
    term          go to state 37


State 49

   37 whileStatement: WHILE_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 70
    functionCall  go to state 36
    term          go to state 37


State 50

   38 forStatement: FOR_K OPEN_BRACKET . expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 71
    functionCall  go to state 36
    term          go to state 37


State 51

   24 statement: RETURN_K expression . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 52

   25 statement: BREAK_K SEMICOLON .

    $default  reduce using rule 25 (statement)


State 53

   26 statement: CONTINUE_K SEMICOLON .

    $default  reduce using rule 26 (statement)


State 54

    5 inputStatement: INPUT_K OPEN_BRACKET . INDENTIFIER CLOSE_BRACKET

    INDENTIFIER  shift, and go to state 73


State 55

    6 outputStatement: OUTPUT_K OPEN_BRACKET . INDENTIFIER CLOSE_BRACKET
    7                | OUTPUT_K OPEN_BRACKET . literal CLOSE_BRACKET

    STRING       shift, and go to state 18
    CONSTANT     shift, and go to state 19
    INDENTIFIER  shift, and go to state 74

    literal  go to state 75


State 56

   18 term: UN_OP term .

    $default  reduce using rule 18 (term)


State 57

   17 term: OPEN_BRACKET expression . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 76


State 58

   12 functionCall: INDENTIFIER OPEN_BRACKET . CLOSE_BRACKET
   13             | INDENTIFIER OPEN_BRACKET . commaSeparatedExpressions CLOSE_BRACKET

    STRING         shift, and go to state 18
    CONSTANT       shift, and go to state 19
    UN_OP          shift, and go to state 29
    OPEN_BRACKET   shift, and go to state 30
    CLOSE_BRACKET  shift, and go to state 77
    INDENTIFIER    shift, and go to state 31

    literal                    go to state 32
    expression                 go to state 78
    commaSeparatedExpressions  go to state 79
    functionCall               go to state 36
    term                       go to state 37


State 59

   30 statement: inputStatement SEMICOLON .

    $default  reduce using rule 30 (statement)


State 60

   31 statement: outputStatement SEMICOLON .

    $default  reduce using rule 31 (statement)


State 61

   32 statement: expression SEMICOLON .

    $default  reduce using rule 32 (statement)


State 62

    9 expression: term BIN_OP . expression

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 80
    functionCall  go to state 36
    term          go to state 37


State 63

   33 statement: declaration SEMICOLON .

    $default  reduce using rule 33 (statement)


State 64

   36 block: OPEN_CURLY statements CLOSE_CURLY .

    $default  reduce using rule 36 (block)


State 65

   35 statements: statements statement .

    $default  reduce using rule 35 (statements)


State 66

   40 elseStatement: ELSE_K . OPEN_BRACKET expression CLOSE_BRACKET block

    OPEN_BRACKET  shift, and go to state 81


State 67

   42 ifElseStatement: ifStatement elseStatement .

    $default  reduce using rule 42 (ifElseStatement)


State 68

   20 declaration: declaration OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 20 (declaration)


State 69

   39 ifStatement: IF_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 82


State 70

   37 whileStatement: WHILE_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 83


State 71

   38 forStatement: FOR_K OPEN_BRACKET expression . SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 84


State 72

   24 statement: RETURN_K expression SEMICOLON .

    $default  reduce using rule 24 (statement)


State 73

    5 inputStatement: INPUT_K OPEN_BRACKET INDENTIFIER . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 85


State 74

    6 outputStatement: OUTPUT_K OPEN_BRACKET INDENTIFIER . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 86


State 75

    7 outputStatement: OUTPUT_K OPEN_BRACKET literal . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 87


State 76

   17 term: OPEN_BRACKET expression CLOSE_BRACKET .

    $default  reduce using rule 17 (term)


State 77

   12 functionCall: INDENTIFIER OPEN_BRACKET CLOSE_BRACKET .

    $default  reduce using rule 12 (functionCall)


State 78

   10 commaSeparatedExpressions: expression .

    $default  reduce using rule 10 (commaSeparatedExpressions)


State 79

   11 commaSeparatedExpressions: commaSeparatedExpressions . COMMA expression
   13 functionCall: INDENTIFIER OPEN_BRACKET commaSeparatedExpressions . CLOSE_BRACKET

    COMMA          shift, and go to state 88
    CLOSE_BRACKET  shift, and go to state 89


State 80

    9 expression: term BIN_OP expression .

    $default  reduce using rule 9 (expression)


State 81

   40 elseStatement: ELSE_K OPEN_BRACKET . expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 90
    functionCall  go to state 36
    term          go to state 37


State 82

   39 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 91


State 83

   37 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 92


State 84

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON . expression SEMICOLON expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 93
    functionCall  go to state 36
    term          go to state 37


State 85

    5 inputStatement: INPUT_K OPEN_BRACKET INDENTIFIER CLOSE_BRACKET .

    $default  reduce using rule 5 (inputStatement)


State 86

    6 outputStatement: OUTPUT_K OPEN_BRACKET INDENTIFIER CLOSE_BRACKET .

    $default  reduce using rule 6 (outputStatement)


State 87

    7 outputStatement: OUTPUT_K OPEN_BRACKET literal CLOSE_BRACKET .

    $default  reduce using rule 7 (outputStatement)


State 88

   11 commaSeparatedExpressions: commaSeparatedExpressions COMMA . expression

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 94
    functionCall  go to state 36
    term          go to state 37


State 89

   13 functionCall: INDENTIFIER OPEN_BRACKET commaSeparatedExpressions CLOSE_BRACKET .

    $default  reduce using rule 13 (functionCall)


State 90

   40 elseStatement: ELSE_K OPEN_BRACKET expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 95


State 91

   39 ifStatement: IF_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 39 (ifStatement)


State 92

   37 whileStatement: WHILE_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 37 (whileStatement)


State 93

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression . SEMICOLON expression CLOSE_BRACKET block

    SEMICOLON  shift, and go to state 96


State 94

   11 commaSeparatedExpressions: commaSeparatedExpressions COMMA expression .

    $default  reduce using rule 11 (commaSeparatedExpressions)


State 95

   40 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 97


State 96

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON . expression CLOSE_BRACKET block

    STRING        shift, and go to state 18
    CONSTANT      shift, and go to state 19
    UN_OP         shift, and go to state 29
    OPEN_BRACKET  shift, and go to state 30
    INDENTIFIER   shift, and go to state 31

    literal       go to state 32
    expression    go to state 98
    functionCall  go to state 36
    term          go to state 37


State 97

   40 elseStatement: ELSE_K OPEN_BRACKET expression CLOSE_BRACKET block .

    $default  reduce using rule 40 (elseStatement)


State 98

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression . CLOSE_BRACKET block

    CLOSE_BRACKET  shift, and go to state 99


State 99

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET . block

    OPEN_CURLY  shift, and go to state 13

    block  go to state 100


State 100

   38 forStatement: FOR_K OPEN_BRACKET expression SEMICOLON expression SEMICOLON expression CLOSE_BRACKET block .

    $default  reduce using rule 38 (forStatement)
